import numpy as np
from matplotlib import pyplot as plt


class ResultsAnalyzer:
    def __init__(self, infected_percentages, vulnerable_percentages, total_costs):
        self.infected_percentages = infected_percentages
        self.vulnerable_percentages = vulnerable_percentages
        self.total_costs = total_costs

    def average_percentages_over_time(self):
        """
        Calculate the average percentages of infected and vulnerable nodes over time steps for all runs.
        """
        avg_infected_percentages = np.mean(self.infected_percentages, axis=0)
        avg_vulnerable_percentages = np.mean(self.vulnerable_percentages, axis=0)
        return avg_infected_percentages, avg_vulnerable_percentages

    def plot_results(self, avg_infected, avg_vulnerable):
        """
        Plot average infected and average vulnerable nodes over time-steps
        """
        # Plot the averaged percentages
        time_steps = range(len(avg_infected))
        plt.plot(time_steps, avg_infected, label='Average Infected')
        plt.plot(time_steps, avg_vulnerable, label='Average Vulnerable')
        plt.xlabel('Time Steps')
        plt.ylabel('Percentage (%)')
        plt.title('Average Infected and Vulnerable Percentages over Time Steps')
        plt.legend()
        plt.grid()
        plt.show()

    def average_costs(self):
        """
        Calculate the average costs of infected and alerted nodes over time steps for all runs.
        """
        return np.mean(self.total_costs)
