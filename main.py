from matplotlib import pyplot as plt
import numpy as np

from Costs import Costs
from Grid import Grid
from Parameters import Parameters
from ResultsAnalyzer import ResultsAnalyzer
from Simulation import Simulation


def main():
    epsilon1_options = [0.0, 0.1, 0.2, 2.0, 47.5]

    for epsilon1 in epsilon1_options:
        # Define parameters
        parameters = Parameters(beta1=0.05, beta2=0.005, gamma=0.02, epsilon1=epsilon1, epsilon2=0.475)

        # Initialize costs
        costs = Costs(c_A=0, c_S=0, c_I=0, c_R=0, c_SI=1, c_SA=1, c_AS=1, c_AI=1, c_IR=1)

        # Create a Grid instance
        grid = Grid(size=30, parameters=parameters, costs=costs)

        # Create a Simulation instance
        simulation = Simulation(grid, num_runs=2, num_time_steps=800)

        # Run the simulation and collect results
        infected_percentages, vulnerable_percentages, total_costs = simulation.run_simulation(verbose=False,
                                                                                              show_plot=False)

        # Create a ResultsAnalyzer instance
        analyzer = ResultsAnalyzer(infected_percentages, vulnerable_percentages)

        # Calculate average percentages
        avg_infected, avg_vulnerable = analyzer.average_percentages_over_time()
        # analyzer.plot_results(avg_infected, avg_vulnerable)

        # Calculate and print peaks of infection and protected from infection
        peak_infected = np.max(avg_infected)
        protected_from_infection = avg_vulnerable[-1]
        print("Epsilon1 Value: {}. Peak of Infection: {:.1f} - Protected from Infection: {:.1f}".format(epsilon1,
                                                                                                        peak_infected,
                                                                                                        protected_from_infection))

        # Plot average infected nodes for different epsilon1s
        time_steps = range(len(avg_infected))
        plt.plot(time_steps, avg_infected, label=epsilon1)

    plt.xlabel('Time Steps')
    plt.ylabel('Percentage (%)')
    plt.title('Average Infected Percentages over Time Steps')
    plt.legend()
    plt.grid()
    plt.show()


if __name__ == "__main__":
    main()
